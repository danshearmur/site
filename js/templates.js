/*This file is generated by tplcpl :)*/

;(function(exports){

/*JADE runtime routines*/

var jade = (function(exports){
/*!
 * Jade - runtime
 * Copyright(c) 2010 TJ Holowaychuk <tj@vision-media.ca>
 * MIT Licensed
 */

/**
 * Lame Array.isArray() polyfill for now.
 */

if (!Array.isArray) {
  Array.isArray = function(arr){
    return '[object Array]' == toString.call(arr);
  };
}

/**
 * Lame Object.keys() polyfill for now.
 */

if (!Object.keys) {
  Object.keys = function(obj){
    var arr = [];
    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        arr.push(key);
      }
    }
    return arr;
  } 
}

/**
 * Render the given attributes object.
 *
 */

exports.attrs = function attrs(obj){
  var buf = []
    , terse = obj.terse;
  delete obj.terse;
  var keys = Object.keys(obj)
    , len = keys.length;
  if (len) {
    buf.push('');
    for (var i = 0; i < len; ++i) {
      var key = keys[i]
        , val = obj[key];
      if ('boolean' == typeof val || null == val) {
        if (val) {
          terse
            ? buf.push(key)
            : buf.push(key + '="' + key + '"');
        }
      } else if ('class' == key && Array.isArray(val)) {
        buf.push(key + '="' + exports.escape(val.join(' ')) + '"');
      } else {
        buf.push(key + '="' + exports.escape(val) + '"');
      }
    }
  }
  return buf.join(' ');
};

/**
 * Escape the given string of `html`.
 *
 */

exports.escape = function escape(html){
  return String(html)
    .replace(/&(?!\w+;)/g, '&amp;')
    .replace(/</g, '&lt;')
    .replace(/>/g, '&gt;')
    .replace(/"/g, '&quot;');
};

/**
 * Re-throw the given `err` in context to the
 * `str` of jade, `filename`, and `lineno`.
 *
 */

exports.rethrow = function rethrow(err, str, filename, lineno){
  var context = 3
    , lines = str.split('\n')
    , start = Math.max(lineno - context, 0)
    , end = Math.min(lines.length, lineno + context); 

  // Error context
  var context = lines.slice(start, end).map(function(line, i){
    var curr = i + start + 1;
    return (curr == lineno ? '  > ' : '    ')
      + curr
      + '| '
      + line;
  }).join('\n');

  // Alter exception message
  err.path = filename;
  err.message = (filename || 'Jade') + ':' + lineno 
    + '\n' + context + '\n\n' + err.message;
  throw err;
};

  return exports;

})({});


var escapeHTML = jade.escape;
/*Compiled templates*/
var TPL = {};

/**
 * @template delicious.jade
 */

TPL['delicious.jade'] = function(locals, attrs, escape, rethrow) {
var attrs = jade.attrs, escape = jade.escape, rethrow = jade.rethrow;
var buf = [];
with (locals || {}) {
var interp;
buf.push('<div');
buf.push(attrs({ 'id':('delicious-panel'), "class": ('panel') }));
buf.push('><h2>delicious</h2>');
// iterate data
(function(){
  if ('number' == typeof data.length) {
    for (var $index = 0, $$l = data.length; $index < $$l; $index++) {
      var item = data[$index];

buf.push('<div');
buf.push(attrs({ "class": ('row') + ' ' + ('del') }));
buf.push('><a');
buf.push(attrs({ 'href':(item.u), 'target':("_blank"), "class": ('row-link') }));
buf.push('>');
var __val__ = item.d
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a><p');
buf.push(attrs({ "class": ('del-notes') }));
buf.push('>');
var __val__ = item.n
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</p><ul');
buf.push(attrs({ "class": ('del-tags') }));
buf.push('>');
// iterate item.t
(function(){
  if ('number' == typeof item.t.length) {
    for (var $index = 0, $$l = item.t.length; $index < $$l; $index++) {
      var tag = item.t[$index];

if ( tag != "")
{
buf.push('<li><a');
buf.push(attrs({ 'href':("http://delicious.com/danshearmur/" + (tag) + ""), 'target':("_blank") }));
buf.push('>');
var __val__ = tag
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a></li>');
}
    }
  } else {
    for (var $index in item.t) {
      var tag = item.t[$index];

if ( tag != "")
{
buf.push('<li><a');
buf.push(attrs({ 'href':("http://delicious.com/danshearmur/" + (tag) + ""), 'target':("_blank") }));
buf.push('>');
var __val__ = tag
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a></li>');
}
   }
  }
}).call(this);

buf.push('</ul>');
 var date = moment(item.dt)
buf.push('<time');
buf.push(attrs({ 'datetime':(date.format('YYYY-MM-DDTHH:MM:SSZ')), "class": ('del-time') }));
buf.push('>');
var __val__ = date.fromNow()
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</time></div>');
    }
  } else {
    for (var $index in data) {
      var item = data[$index];

buf.push('<div');
buf.push(attrs({ "class": ('row') + ' ' + ('del') }));
buf.push('><a');
buf.push(attrs({ 'href':(item.u), 'target':("_blank"), "class": ('row-link') }));
buf.push('>');
var __val__ = item.d
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a><p');
buf.push(attrs({ "class": ('del-notes') }));
buf.push('>');
var __val__ = item.n
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</p><ul');
buf.push(attrs({ "class": ('del-tags') }));
buf.push('>');
// iterate item.t
(function(){
  if ('number' == typeof item.t.length) {
    for (var $index = 0, $$l = item.t.length; $index < $$l; $index++) {
      var tag = item.t[$index];

if ( tag != "")
{
buf.push('<li><a');
buf.push(attrs({ 'href':("http://delicious.com/danshearmur/" + (tag) + ""), 'target':("_blank") }));
buf.push('>');
var __val__ = tag
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a></li>');
}
    }
  } else {
    for (var $index in item.t) {
      var tag = item.t[$index];

if ( tag != "")
{
buf.push('<li><a');
buf.push(attrs({ 'href':("http://delicious.com/danshearmur/" + (tag) + ""), 'target':("_blank") }));
buf.push('>');
var __val__ = tag
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</a></li>');
}
   }
  }
}).call(this);

buf.push('</ul>');
 var date = moment(item.dt)
buf.push('<time');
buf.push(attrs({ 'datetime':(date.format('YYYY-MM-DDTHH:MM:SSZ')), "class": ('del-time') }));
buf.push('>');
var __val__ = date.fromNow()
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</time></div>');
   }
  }
}).call(this);

buf.push('</div>');
}
return buf.join("");
};

/**
 * @template twitter.jade
 */

TPL['twitter.jade'] = function(locals, attrs, escape, rethrow) {
var attrs = jade.attrs, escape = jade.escape, rethrow = jade.rethrow;
var buf = [];
with (locals || {}) {
var interp;
buf.push('<div');
buf.push(attrs({ 'id':('twitter-panel'), "class": ('panel') }));
buf.push('><h2>twitter</h2>');
// iterate data
(function(){
  if ('number' == typeof data.length) {
    for (var $index = 0, $$l = data.length; $index < $$l; $index++) {
      var item = data[$index];

buf.push('<div');
buf.push(attrs({ "class": ('row') + ' ' + ('tw') }));
buf.push('><p');
buf.push(attrs({ "class": ('tweet') }));
buf.push('>');
var __val__ = twttr.txt.autoLink(item.text)
buf.push(null == __val__ ? "" : __val__);
buf.push('</p>');
 var date = moment(item.created_at, 'ddd MMM DD hh:mm:ss Z YYYY')
buf.push('<time');
buf.push(attrs({ 'datetime':(date.format('YYYY-MM-DDTHH:MM:SSZ')), "class": ('tw-time') }));
buf.push('>');
var __val__ = date.fromNow()
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</time></div>');
    }
  } else {
    for (var $index in data) {
      var item = data[$index];

buf.push('<div');
buf.push(attrs({ "class": ('row') + ' ' + ('tw') }));
buf.push('><p');
buf.push(attrs({ "class": ('tweet') }));
buf.push('>');
var __val__ = twttr.txt.autoLink(item.text)
buf.push(null == __val__ ? "" : __val__);
buf.push('</p>');
 var date = moment(item.created_at, 'ddd MMM DD hh:mm:ss Z YYYY')
buf.push('<time');
buf.push(attrs({ 'datetime':(date.format('YYYY-MM-DDTHH:MM:SSZ')), "class": ('tw-time') }));
buf.push('>');
var __val__ = date.fromNow()
buf.push(escape(null == __val__ ? "" : __val__));
buf.push('</time></div>');
   }
  }
}).call(this);

buf.push('</div>');
}
return buf.join("");
};
var Templating = ( function (window) {
	var tpl, exports = {};

	tpl = exports.tpl = function (viewName, locals, scope) {
		var view = TPL[viewName];
		if('function' !== typeof (view)) {
			throw 'View not found';
		}
		if(scope!=='undefined') {
			return view.call(scope, locals)
		} else {
			return view(locals);
		}
	}
	
	function tplHelper (viewName, locals) {
		return tpl(viewName, locals, this);
	}

	exports.enable = function (klass) {
		if(klass.prototype) {
			klass.prototype.tpl = tplHelper;
		} else {
			klass.tpl = tplHelper;
		}
	}

	return exports;
} (window) );


exports.Templating = Templating;

}(window));